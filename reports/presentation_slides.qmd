---
title: "Git & GitHub"
format: revealjs
author: Andrea Leitereg & Kevin Reuss
#fontsize: 28pt
---

# What is Git?

## 

![](git-logo.png){fig-align="center" width="300"}

Git is a [**distributed version control system**]{.underline} that tracks versions of files.

## Distributed version control

![](distributed-version-control-diagram.png){fig-align="center"}

## Why is version control important? {.center}

![](tech-comics-version-control.png){fig-align="center"}

## Benefits of Git

Simplify collaboration

Ensure version control

Document changes to code (or other project materials!)

## How Git works

[![](git-workflow-image-1.png)](https://newsletter.techworld-with-milan.com/p/how-to-learn-git)

## Typical Git workflow

-   Initialize Git on a folder, making it a **Repository (or Repo)**

-   Work on your project! Change, add, or delete project files -- these are now considered **Modified**

-   Select the **Modified** files you want to **Stage**

-   **Staged** files are **Committed**, which prompts Git to store a permanent snapshot of the files

-   When you're ready to integrate your changes into the main project, **Push** your **Committed** changes to the **Main Repository**

## Key Git commands

![](git-workflow-image-2.png){fig-align="center"}

## Quick Demo

Basic commands with Git Bash!

# Popular Git tools

## What is a Git tool?

Git tools are web-based interfaces for managing projects and repositories with Git

![](github-logo.png){width="179"}

![](bitbucket-logo.png){width="216"}

![](gitlab-logo.png){width="226"}

# Intro to GitHub

## 

Uploaded files are stored to a **Git repository**

![](git-hub-image-1.png)

## 

Git automatically starts to **track and manage changes** (aka "commits")

![](git-hub-image-2.png)

## 

You can perform many actions in GitHub via the browser, but most people **work on a copy of the repository on their own machine *(git pull)*** and then continually **sync local changes** **to the central repository** ***(git push)*** on GitHub

![](distributed-version-control-diagram-2.png){fig-align="center"}

## Dos and Don'ts for using Git & GitHub \@ DOL

-   **Do** keep data and other potentially sensitive information stored locally on your machine

-   **Don't** store any data or files containing PII on GitHub

-   *When in doubt, **Do** keep repositories private (Dave going to check on this?\*\*\*)*

## How do Git and GitHub fit into the data project lifecycle?

Review Dave's visual with Git/GitHub steps

## Quick Demo

Hello, world! in GitHub

# Git in Practice

## How we use Git to work collaboratively

## Demo
